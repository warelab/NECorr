% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MainFunction.R
\name{Necorr}
\alias{Necorr}
\title{Necorr}
\usage{
Necorr(
  networkFile = "",
  expression = "",
  description.file = "",
  condition = "",
  metadata = "",
  name = "",
  Filelist = "",
  method = "GCC",
  permutation = 1000,
  sigcorr = 0.01,
  fadjacency = "only",
  type = "gene",
  NSockets = 2
)
}
\arguments{
\item{networkFile}{Molecular network file with source in the first column, targets in
the second column}

\item{expression}{Expression file in log2 (ratio expression) with row: gene,
first column: type of sample,second column: sample names}

\item{description.file}{genome description}

\item{condition}{Condition from expression to study the network co-expression
correlation}

\item{metadata}{dataframe with the metadata}

\item{name}{the name of the}

\item{Filelist}{condition list see if still necessary with metadata}

\item{method}{used for co-expression correlation: GCC, MINE, PCC, SCC or KCC}

\item{permutation}{permutation number used for all significance calculation
#param lmiR List of miRNAs}

\item{sigcorr}{significance of the correlation}

\item{fadjacency}{correlation with all combination (all) or network
combination only (only)}

\item{type}{Omics comparative expression type: protein or gene}

\item{NSockets}{number of sockets}
}
\value{
res
}
\description{
NECorr helps discover candidate genes that could be
important for specific conditions.
The principal inputs are the expression data and the network file.
The expression data should start with 3 header columns.
The first column describes the conditions. Each condition will be
treated separately for the co-expression analysis
The output of the program will be generated in a result folder generated
in the working path
Create the output directory if not existing; generate "./results" dir and
"./results/tmp"
C.Liseron-Monfils - Ware lab Sept2013 - CSHL
partly based on rsgcc package for the GCC, PCC,KCC and SPP Ma et al, 2012, plant Physiology
}
\author{
Christophe Liseron-Monfils, Andrew Olson
}
