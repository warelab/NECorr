library(rmarkdown)
install.packages("rmarkdown")
.library()
.library
.Library
list_pkg = list("ZeBook", "glmnet", "glmnetUtils", "car", "corrplot", "pls", "mgcv", "ROCR", "pROC","randomForest", "rpart", "rpart.plot","caret", "factoextra", "cluster",  "fpc", "NbClust")
a=sapply(list_pkg , install.packages, repos = "http://cran.rstudio.com")
install.packages("keras")
library(keras)
library(reticulate)
conda_create("r-reticulate")
use_condaenv("r-reticulate")
conda_install("r-reticulate",c('keras','tensorflow'), pip = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
library(reticulate)
conda_create("r-reticulate")
use_condaenv("r-reticulate")
conda_install("r-reticulate",c('keras','tensorflow'), pip = TRUE)
conda_install("r-reticulate",c('keras','tensorflow'), pip = TRUE)
library(keras)
library(reticulate)
conda_create("r-reticulate")
use_condaenv("r-reticulate")
conda_install("r-reticulate",c('keras','tensorflow'), python_version = "3.6.10", pip = TRUE)
conda_create("r-reticulate")
use_condaenv("r-reticulate")
conda_install("r-reticulate",c('keras','tensorflow'), python_version = "3.6.10", pip = TRUE)
q("no")
library(keras)
mnist <- dataset_mnist()
library(NECorr)
install.packages("tensorflow")
library(tensorflow)
110000/12
6000-2600
2,805*12*5
2805*12*5
(725000/20)/12
(725000/25)/12
install.packages("TunePareto")
library(keras)
?keras
getwd()
install.packages("Rcpp")
install.packages("RcppParallel")
install.packages("RcppArmadillo")
install.packages("StanHeaders")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
install.packages("foreach")
install.packages("gplots")
install.packages("gplots")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("hash")
install.packages("klaR")
install.packages("igraph")
install.packages("plyr")
BiocManager::install(c("GenomicFeatures", "AnnotationDbi", "limma", "DESeq2", "edgeR", "Biobase", "BiocParallel", "GenomicRanges")
)
install.packages("RColorBrewer")
install.packages("ROCR")
q("no")
setwd("~/Documents/1_Warelab/NECorr")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "./test.necorr/expression.txt",
networkFile = "./test.necorr/network.txt",
description.file = "./test.necorr/description.csv",
metadata = "./test.necorr/metadata.txt",
condition = "carpel")
res <- Necorr(expression = "../test.necorr/expression.txt",
networkFile = "../test.necorr/network.txt",
description.file = "../test.necorr/description.csv",
metadata = "../test.necorr/metadata.txt",
condition = "carpel")
getwd()
setwd("~/Documents/GitHub/NECorr/")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
?rle
x <- rev(rep(6:10, 1:5))
x
rle(x)
setwd("~/Documents/GitHub/NECorr/")
# after testing
devtools::check()
# after testing
devtools::check()
# after testing
devtools::check()
# after testing
devtools::check()
# after testing
devtools::check()
load_all()
#Rcpp::compileAttributes()
devtools::load_all()
network.file <- "../data/network.txt"
expression <- "../data/expression.txt"
description.file <- "../data/description.csv"
metadata <- "../data/metadata.txt"
res <- Necorr(networkFile = network.file, expression = expression,
description.file = description.file,
condition = "cond1", metadata = metadata, name ="test", NSockets = 2)
getwd()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
#Rcpp::compileAttributes()
devtools::load_all()
res <- Necorr(expression = "../../1_Repository/test.necorr/expression.txt",
networkFile = "../../1_Repository/test.necorr/network.txt",
description.file = "../../1_Repository/test.necorr/description.csv",
metadata = "../../1_Repository/test.necorr/metadata.txt",
condition = "carpel")
# after testing
devtools::check()
